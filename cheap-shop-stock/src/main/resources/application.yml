spring:
  application:
    name: cheap-shop-stock
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: zhangcheng
    password: 123456
    virtual-host: /
    connection-timeout: 15000
    listener:
      simple:
        acknowledge-mode: manual
        concurrency: 5
        max-concurrency: 10
      order:
        queue:
          name: order_queue
          durable: true
        exchange:
          name: order_exchange
          durable: true
          type: direct
          ignoreDeclarationExceptions: true
        key: direct.order
  datasource:
    url: jdbc:mysql://localhost:3306/cheapshop?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    # 可以不配置，根据url自动识别，建议配置
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    ###################以下为druid增加的配置###########################
    # 通过别名的方式配置扩展插件，多个英文逗号分隔，常用的插件有：
    # 监控统计用的filter:stat
    # 日志用的filter:log4j
    # 防御sql注入的filter:wall
    filters: stat
    #最大连接池个数
    maxActive: 20
    #初始化连接池个数
    initialSize: 1
    #配置获取连接等待超时时间单位毫秒
    maxWait: 60000
    # 最小连接池个数——》已经不再使用，配置了也没效果
    minIdle: 1
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句。
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    validationQuery: select 'x'
    # 建议配置为true，不影响性能，并且保证安全性。
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
server:
  port: 8013
#eureka:
#  client:
#    register-with-eureka: false
#    fetch-registry: false
#    serviceUrl:
#      defaultZone: http://localhost:${server.port}/eureka/
